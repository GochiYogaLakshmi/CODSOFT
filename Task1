class Task:
    def __init__(self, task_name, due_date, priority):
        self.task_name = task_name
        self.due_date = due_date
        self.priority = priority
        self.completed = False

class TodoList:
    def __init__(self):
        self.tasks = []

    def add_task(self, task):
        self.tasks.append(task)

    def display_tasks(self):
        for idx, task in enumerate(self.tasks, start=1):
            status = 'Completed' if task.completed else 'Pending'
            print(f"{idx}. {task.task_name} - Due: {task.due_date} - Priority: {task.priority} - Status: {status}")

    def mark_completed(self, task_index):
        if 1 <= task_index <= len(self.tasks):
            self.tasks[task_index - 1].completed = True
            print("Task marked as completed.")
        else:
            print("Invalid task index.")

def main():
    todo_list = TodoList()

    while True:
        print("\n1. Add Task\n2. Display Tasks\n3. Mark Task as Completed\n4. Exit")
        choice = input("Enter your choice: ")

        if choice == '1':
            task_name = input("Enter task name: ")
            due_date = input("Enter due date: ")
            priority = input("Enter priority: ")
            new_task = Task(task_name, due_date, priority)
            todo_list.add_task(new_task)
            print("Task added successfully!")
        elif choice == '2':
            print("------ Your Tasks ------")
            todo_list.display_tasks()
        elif choice == '3':
            task_index = int(input("Enter the task number to mark as completed: "))
            todo_list.mark_completed(task_index)
        elif choice == '4':
            print("Exiting the program.")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
